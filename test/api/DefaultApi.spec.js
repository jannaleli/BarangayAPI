/**
 * BarangayAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2019-07-14T05:55:41Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BarangayApi);
  }
}(this, function(expect, BarangayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BarangayApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('attachmentAttachmentIdGet', function() {
      it('should call attachmentAttachmentIdGet successfully', function(done) {
        //uncomment below and update the code to test attachmentAttachmentIdGet
        //instance.attachmentAttachmentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentPost', function() {
      it('should call attachmentPost successfully', function(done) {
        //uncomment below and update the code to test attachmentPost
        //instance.attachmentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('complaintComplaintIdGet', function() {
      it('should call complaintComplaintIdGet successfully', function(done) {
        //uncomment below and update the code to test complaintComplaintIdGet
        //instance.complaintComplaintIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('complaintGet', function() {
      it('should call complaintGet successfully', function(done) {
        //uncomment below and update the code to test complaintGet
        //instance.complaintGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('complaintPost', function() {
      it('should call complaintPost successfully', function(done) {
        //uncomment below and update the code to test complaintPost
        //instance.complaintPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentGet', function() {
      it('should call documentGet successfully', function(done) {
        //uncomment below and update the code to test documentGet
        //instance.documentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentPost', function() {
      it('should call documentPost successfully', function(done) {
        //uncomment below and update the code to test documentPost
        //instance.documentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentUserIdGet', function() {
      it('should call documentUserIdGet successfully', function(done) {
        //uncomment below and update the code to test documentUserIdGet
        //instance.documentUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventGet', function() {
      it('should call eventGet successfully', function(done) {
        //uncomment below and update the code to test eventGet
        //instance.eventGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventPost', function() {
      it('should call eventPost successfully', function(done) {
        //uncomment below and update the code to test eventPost
        //instance.eventPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permitGet', function() {
      it('should call permitGet successfully', function(done) {
        //uncomment below and update the code to test permitGet
        //instance.permitGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permitPost', function() {
      it('should call permitPost successfully', function(done) {
        //uncomment below and update the code to test permitPost
        //instance.permitPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permitUserIdGet', function() {
      it('should call permitUserIdGet successfully', function(done) {
        //uncomment below and update the code to test permitUserIdGet
        //instance.permitUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPost', function() {
      it('should call userPost successfully', function(done) {
        //uncomment below and update the code to test userPost
        //instance.userPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUserIdGet', function() {
      it('should call userUserIdGet successfully', function(done) {
        //uncomment below and update the code to test userUserIdGet
        //instance.userUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
